class Ques {

  ArrayList<String> preguntas = new ArrayList<String>();
  ArrayList<String> opciones = new ArrayList<String>();
  ArrayList<String> respuestas = new ArrayList<String>();
  ArrayList<String> info = new ArrayList<String>();


  ArrayList<String> questions = new ArrayList<String>();
  ArrayList<String> options = new ArrayList<String>();
  ArrayList<String> answers = new ArrayList<String>();
  ArrayList<String> informat = new ArrayList<String>();


  int posicion = 0;
  //español
  int opcion = 0;
  //ingles
  int option=0;
  boolean respondido=false;
  //español
  String opcion1, opcion2, opcion3;
  //ingles
  String option1, option2, option3;

  PFont fuente1, fuente2, fuente3;
  String pr[] = loadStrings("preguntas.txt");
  String op[] = loadStrings("opciones.txt");
  String re[] = loadStrings("respuestas.txt");
  String in[] = loadStrings("info.txt");


  String qu[] = loadStrings("questions.txt");
  String opt[] = loadStrings("options.txt");
  String an[] = loadStrings("answers.txt");
  String inf[] = loadStrings("informat.txt");


  PImage good;
  PImage wrong;


  float x;
  float y;
  float tam;
  float size;
  float tiempo;

  boolean ingles=false;

  Ques() {


    good = loadImage("good.png");  
    wrong=loadImage("wrong.png"); 
    fuente1= loadFont("DKPundak-48.vlw");
    fuente2=loadFont("DenneShuffleEuroHollow-48.vlw");
    fuente3=loadFont("KGSummerSunshineBlackout-48.vlw");
    x=width/2;
    y=height/3;
    size=100;
    tam=350;
    tiempo = 1.0;


    for (int i=0; i<pr.length; i++) {
      preguntas.add(pr[i]);
    }
    for (int i=0; i<op.length; i++) {
      opciones.add(op[i]);
    }
    for (int i=0; i<re.length; i++) {
      respuestas.add(re[i]);
    }
    for (int i=0; i<in.length; i++) {
      info.add(in[i]);
    }


    for (int i=0; i<qu.length; i++) {
      questions.add(qu[i]);
    }
    for (int i=0; i<opt.length; i++) {
      options.add(opt[i]);
    }
    for (int i=0; i<an.length; i++) {
      answers.add(an[i]);
    }
    for (int i=0; i<inf.length; i++) {
      informat.add(inf[i]);
    }
  }


  Ques(float tiempo_) {

    tiempo=tiempo_;
  }




  void dibujar() {


    if (!respondido) {
      if (ingles==false) {

        fill(0);
        textFont(fuente1, 50);
        textAlign(CENTER);
        textFont(fuente1);
        textSize(40);
        text(preguntas.get(posicion), 0.1*width, height/8, 0.8*width, 100);
        textFont(fuente2);
        textSize(50);

        if (opcion==0) {
          fill(0);
          text(opcion1, 0.1*width, height/5+150, 0.8*width, 100);
          fill(150);
          text(opcion2, 0.1*width, height/5+295, 0.8*width, 100);
          text(opcion3, 0.1*width, height/5+440, 0.8*width, 100);
        }
        if (opcion==1) {
          fill(150);
          text(opcion1, 0.1*width, height/5+150, 0.8*width, 100);
          fill(0);
          text(opcion2, 0.1*width, height/5+295, 0.8*width, 100);
          fill(150);
          text(opcion3, 0.1*width, height/5+440, 0.8*width, 100);
        }
        if (opcion==2) {
          fill(150);
          text(opcion1, 0.1*width, height/5+150, 0.8*width, 100);
          text(opcion2, 0.1*width, height/5+295, 0.8*width, 100);
          fill(0);
          text(opcion3, 0.1*width, height/5+440, 0.8*width, 100);
        }
      } else {

        textAlign(CENTER);
        fill(20);
        textFont(fuente3);
        textSize(30);
        textAlign(CENTER, CENTER);
        text(info.get(posicion), 0.03*width, height-450, 0.93*width, 400);

        if (opciones.get(posicion).split("/")[opcion].equals(respuestas.get(posicion))) {
          imageMode(CENTER);
          image(good, x, y, size, size);
        } else {
          imageMode(CENTER);
          image(wrong, x, y, size, size);
        }
      }
    }


    if (ingles==true) {

      fill(0);
      textFont(fuente1, 50);
      textAlign(CENTER);
      textFont(fuente1);
      textSize(40);
      text(questions.get(posicion), 0.1*width, height/8, 0.8*width, 100);
      textFont(fuente2);
      textSize(50);

      if (option==0) {
        fill(0);
        text(opcion1, 0.1*width, height/5+150, 0.8*width, 100);
        fill(150);
        text(opcion2, 0.1*width, height/5+295, 0.8*width, 100);
        text(opcion3, 0.1*width, height/5+440, 0.8*width, 100);
      }
      if (option==1) {
        fill(150);
        text(opcion1, 0.1*width, height/5+150, 0.8*width, 100);
        fill(0);
        text(opcion2, 0.1*width, height/5+295, 0.8*width, 100);
        fill(150);
        text(opcion3, 0.1*width, height/5+440, 0.8*width, 100);
      }
      if (option==2) {
        fill(150);
        text(opcion1, 0.1*width, height/5+150, 0.8*width, 100);
        text(opcion2, 0.1*width, height/5+295, 0.8*width, 100);
        fill(0);
        text(opcion3, 0.1*width, height/5+440, 0.8*width, 100);
      }
    } else {

      textAlign(CENTER);
      fill(20);
      textFont(fuente3);
      textSize(30);
      textAlign(CENTER, CENTER);
      text(informat.get(posicion), 0.03*width, height-450, 0.93*width, 400);
      if (options.get(posicion).split("/")[opcion].equals(answers.get(posicion))) {
        imageMode(CENTER);
        image(good, x, y, size, size);
      } else {
        imageMode(CENTER);
        image(wrong, x, y, size, size);
      }
    }
  }


  void setPosicion(int pos_) {
    respondido=false;
    posicion = pos_;
    if(ingles==false){
    opcion1 = opciones.get(posicion).split("/")[0];
    opcion2 = opciones.get(posicion).split("/")[1];
    opcion3 = opciones.get(posicion).split("/")[2];
    }
    if(ingles==true){
    option1 = options.get(posicion).split("/")[0];
    option2 = options.get(posicion).split("/")[1];
    option3 = options.get(posicion).split("/")[2];
    }
    
    
  }

  void setOpcion(int op_) {
    opcion = op_;
    option=op_;
  }

  void seleccionarIdioma() {
    if (key=='e') {
      ingles=false;
    }

    if (key=='i') {
      ingles=true;
    }
  }


  void seleccionarRespuesta() {

    respondido=true;


    if (opciones.get(posicion).split("/")[opcion].equals(respuestas.get(posicion))) {
      println("respuesta correcta");
    } else {
      println("incorrecto");
    }
    
    if (options.get(posicion).split("/")[option].equals(answers.get(posicion))) {
      println("respuesta correcta");
    } else {
      println("incorrecto");
    }
  }
  void setAnim(int anim_) {
    respondido=true;
    size=anim_;
  }
  void actualizar() {
    if (respondido==true) {
      Ani.to(this, tiempo, "size", tam, Ani.BOUNCE_OUT);
    }
  }
}
